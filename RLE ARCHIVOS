import os

# Codificador RLE
def algoritmoRLE(texto):
    codigo = ''  
    i = 0  

    while i < len(texto):  
        count = 1  
        while i + 1 < len(texto) and texto[i] == texto[i+1]:  
            i += 1  
            count += 1
        codigo += str(count) + texto[i]  
        i += 1  
    return codigo  

# Decodificador RLE
def decodificarRLE(solu):
    texto = ""  

    for i in range(0, len(solu), 2):  
        count = int(solu[i])  
        char = solu[i + 1]  
        texto += char * count  
    return texto  

# Función para codificar un archivo
def codificarArchivo(ruta_entrada, ruta_salida):
    with open(ruta_entrada, 'r') as archivo_entrada:
        contenido = archivo_entrada.read()
        solucion = algoritmoRLE(contenido)
        with open(ruta_salida, 'w') as archivo_salida:
            archivo_salida.write(solucion)

# Función para decodificar un archivo
def decodificarArchivo(ruta_entrada, ruta_salida):
    with open(ruta_entrada, 'r') as archivo_entrada:
        contenido = archivo_entrada.read()
        texto_decodificado = decodificarRLE(contenido)
        with open(ruta_salida, 'w') as archivo_salida:
            archivo_salida.write(texto_decodificado)

# Función para codificar todos los archivos en un directorio
def codificarDirectorio(directorio_entrada, directorio_salida):
    for archivo in os.listdir(directorio_entrada):
        ruta_entrada = os.path.join(directorio_entrada, archivo)
        ruta_salida = os.path.join(directorio_salida, archivo + ".pet")
        codificarArchivo(ruta_entrada, ruta_salida)

# Función para decodificar todos los archivos en un directorio
def decodificarDirectorio(directorio_entrada, directorio_salida):
    for archivo in os.listdir(directorio_entrada):
        if archivo.endswith(".rle"):
            ruta_entrada = os.path.join(directorio_entrada, archivo)
            nombre_salida = archivo[:-4]  # Eliminar la extensión .rle
            ruta_salida = os.path.join(directorio_salida, nombre_salida)
            decodificarArchivo(ruta_entrada, ruta_salida)

# Función principal
def iniciador():
    opcion = input("¿Desea codificar (C) o decodificar (D) un directorio? ").upper()
    if opcion == 'C':
        directorio_entrada = input("Ingrese la ruta del directorio de entrada: ")
        directorio_salida = input("Ingrese la ruta del directorio de salida para los archivos codificados: ")
        codificarDirectorio(directorio_entrada, directorio_salida)
    elif opcion == 'D':
        directorio_entrada = input("Ingrese la ruta del directorio de entrada: ")
        directorio_salida = input("Ingrese la ruta del directorio de salida para los archivos decodificados: ")
        decodificarDirectorio(directorio_entrada, directorio_salida)
    else:
        print("Opción no válida.")

# Llamada a la función principal
iniciador()
